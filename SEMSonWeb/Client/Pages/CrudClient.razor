
@page "/Member/Add_Edit"
@inject IServicesData ServicesData
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject HttpClient _http
@using System.Net.Http.Headers

 <div class ="container-fluid">
        <div class = "row">
            <div class = "col-md-3 col-sm-6 col-xs-12"> </div>        
            <div class = "col-md-6 col-sm-6 col-xs-12">
                <form class="@styform" @onsubmit="SubMem">
                    @if (ServicesData.ActionCall.Contains("sign"))
                    {
                        <h3 class="mb-3 mt-3 text-center"><strong>เพิ่มสมาชิก</strong></h3>
                    }
                    else
                    {
                        <h3 class="mb-3 mt-3 text-center"><strong>แก้ไขสมาชิก</strong></h3>
                    }
                    <div class="mb-3 visually-hidden">
                        <label class="col-sm-3 col-form-label">Id</label>
                        <div class="col-sm-8"><input type="text" class="form-control" @bind="ServicesData.SPClientUserX.PHUserCode"></div>
                    </div>
                    <div class="mb-3 visually-hidden">
                        <label class="col-sm-3 col-form-label">Idp</label>
                        <div class="col-sm-8"> <input type="text" class="form-control" @bind="ServicesData.SPClientUserX.PHProfileCode"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">สถานะ</label>
                        <div class="col-sm-8"><select class="form-select" id="validationDefault01" required @bind="ServicesData.SPClientUserX.PHUserState">
                            <option selected disabled value="">เลือกสถานะ...</option>
                            <option>@userdemo</option>
                            <option>@admindemo</option>
                        </select>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">ตำแหน่ง</label>
                        <div class="col-sm-8">
                            <select class="form-select" id="validationDefault02" required @bind="ServicesData.SPClientUserX.LSPClientProfile.PHPosCode">
                            <option selected disabled value="">เลือกตำแหน่ง...</option>
                            @foreach(var pos in ServicesData.SPClientPosList)
                            {
                                <option value="@pos.PHPosCode">@pos.PHPosName</option>
                            }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">Username</label>
                        <div class="col-sm-8"><input type="text" class="form-control" id="validationDefault03" required placeholder="Enter your username" @bind="ServicesData.SPClientUserX.PHUserName"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">Password</label>
                        <div class="col-sm-8"><input type="text" class="form-control" id="validationDefault04" required placeholder="Enter your password" @bind="ServicesData.SPClientUserX.PHUserPassword"></div>
                    </div>
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">คำนำหน้า</label>
                        <div class="col-sm-8">
                            <select class="form-select" id="validationDefault05" required @bind="ServicesData.SPClientUserX.LSPClientProfile.PHPreCode">
                            <option selected disabled value="">เลือกคำนำหน้า...</option>
                            @foreach(var pre in ServicesData.SPClientPreList)
                            {
                                <option value="@pre.PHPreCode">@pre.PHPreName</option>
                            }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">ชื่อ</label>
                        <div class="col-sm-8"><input type="text" class="form-control " id="validationDefault06" required placeholder="โปรดกรอกชื่อ" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfilefName"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">นามสกุล</label>
                        <div class="col-sm-8"><input type="text" class="form-control" id="validationDefault07" required placeholder="โปรดกรอกนามสกุล" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfilelName"></div>
                    </div>
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">แผนก</label>
                        <div class="col-sm-8">
                        <select class="form-select" id="validationDefault08" required aria-label="select example" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHDepCode">
                            <option selected disabled value="">เลือกแผนก...</option>
                            @foreach(var dep in ServicesData.SPClientDepList)
                            {
                                <option value="@dep.PHDepCode">@dep.PHDepName</option>
                            }
                        </select></div>
                    </div>
                    @if(ServicesData.SPClientUserX.LSPClientProfile.PHPosCode == IDstu){
                    }else{
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">ชั้น</label>
                        <div class="col-sm-8">
                        <select class="form-select" id="validationDefault09" required @bind="ServicesData.SPClientUserX.LSPClientProfile.PHClassCode">
                            <option selected disabled value="">เลือกชั้น...</option>
                            @foreach(var cla in ServicesData.SPClientClassList)
                        {
                            <option value="@cla.PHClassCode">@cla.PHClassName</option>
                        }
                        </select></div>
                    </div>
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">ห้อง</label>
                        <div class="col-sm-8"><input type="number" class="form-control " id="validationDefault10" required placeholder="โปรดกรอกห้อง" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfileClassroom"></div>
                    </div>
                        <div class="form-group row mb-3">
                            <label class="col-sm-3 col-form-label">รหัสนักศึกษา</label>
                            <div class="col-sm-8"><input type="text" class="form-control" id="validationDefault11" required placeholder="โปรดกรอกรหัสนักศึกษา" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfileIDstudent"></div>
                        </div>
                    }
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">เลขบัตรประชาชน</label>
                        <div class="col-sm-8"><input type="text" class="form-control" id="validationDefault12" required placeholder="โปรดกรอกเลขบัตรประชาชน" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfileIDcard"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">เบอร์โทร</label>
                        <div class="col-sm-8"><input type="number" class="form-control" id="validationDefault13" required placeholder="Enter your number" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfilePhone"></div>
                        
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">อีเมล์</label>
                        <div class="col-sm-8    "><input type="email" class="form-control" id="validationDefault14" required placeholder="Enter your email" @bind="ServicesData.SPClientUserX.LSPClientProfile.PHProfileEmail"></div>
                    </div>
                    @*--------------------------------------------------------------------------------------*@
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">รูปภาพ</label>
                        <div class="col-sm-8"><InputFile class="form-control" OnChange="@OnInputFileChange" multiple /></div>
                        @if (filesNames.Count > 0)
                        {
                            <ul>
                                @foreach (var fileName in filesNames)
                                {
                                    <li>
                                        File: @fileName
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="mb-3">
                        @if (ServicesData.ActionCall.Contains("sign"))
                        {
                            <button type="submit" class= "btn btn-primary" @onclick="formcheck">บันทึก</button>
                        }
                        else
                        {
                        <button type="button" class= "btn btn-success " @onclick="UpdateMember">แก้ไข</button>
                        <button class= "btn btn-danger " style="margin-left:50px;" type="button" @onclick="CancleForm">ยกเลิก</button>
                        }
                    </div>
                </form>
                
            </div>
            <div class = "col-md-4 col-sm-4 col-xs-12"> </div>        
        </div>
    </div>
@code {
    public string styform { get; set; } = "row g-3 needs-validation";
    public string userdemo { get; set; } = "user";
    public string admindemo { get; set; } = "admin";
    public string IDstu { get; set; } = "POS-000001";

    private int maxAllowedFiles = int.MaxValue;
    private long maxFileSize = long.MaxValue;
    private List<string> filesNames = new();
    private List<SPClientUser> UserImage = new();

    protected override async Task OnInitializedAsync()
    {
        await ServicesData.GetDbSPClientClass();
        await ServicesData.GetDbSPClientDep();
        await ServicesData.GetDbSPClientPos();
        await ServicesData.GetDbSPClientPre();
        await ServicesData.GetDbSPClientUser();
    }
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        using var content = new MultipartFormDataContent();
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            filesNames.Add(file.Name);

            content.Add(
                content: fileContent,
                name:"\"files\"",
                fileName: file.Name
            );
        }
        var response = await _http.PostAsync("api/Services/ImageAdd", content);
        var newUploadResult = await response.Content.ReadFromJsonAsync<List<SPClientUser>>();
        if(newUploadResult is not null)
        {
            UserImage = UserImage.Concat(newUploadResult).ToList();
        }
    }
    public void formcheck()
    {
        styform = "was-validated";
    }
    public async void SubMem()
    {
        var result = await JS.InvokeAsync<bool>("SaveMemberjs");
        if (result)
        {
            foreach (var fileName in UserImage)
            {
                ServicesData.SPClientUserX.LSPClientProfile.PHProfileNameImg = fileName.LSPClientProfile.PHProfileNameImg;
                ServicesData.SPClientUserX.LSPClientProfile.PHProfileStorageImg = fileName.LSPClientProfile.PHProfileStorageImg;
            }
            await ServicesData.CreateDbSPClientUser(ServicesData.SPClientUserX);
            Navigation.NavigateTo("Member");
            ServicesData.ClearformUser();
        }
    }   
    public async Task UpdateMember()
    {
        var result = await JS.InvokeAsync<bool>("UpdateMemberjs");
        if (result)
        {
            foreach (var fileName in UserImage)
            {
                ServicesData.SPClientUserX.LSPClientProfile.PHProfileNameImg = fileName.LSPClientProfile.PHProfileNameImg;
                ServicesData.SPClientUserX.LSPClientProfile.PHProfileStorageImg = fileName.LSPClientProfile.PHProfileStorageImg;
            }
            await ServicesData.UpdateDbSPClientUser(ServicesData.SPClientUserX);
            Navigation.NavigateTo("Member");
            ServicesData.ClearformUser();
        }
    }
    public void CancleForm()
    {
        Navigation.NavigateTo("Member");
        ServicesData.ClearformUser();
    }
}
