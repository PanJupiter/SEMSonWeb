@page "/Sport/Add_Edit"
@inject IServicesData ServicesData
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class ="container-fluid">
        <div class = "row">
            <div class = "col-md-3 col-sm-6 col-xs-12"> </div>        
            <div class = "col-md-6 col-sm-6 col-xs-12">
                <form @onsubmit="SubSport">
                     @if (ServicesData.ActionModel.Contains("add"))
                    {
                        <h3 class="mb-3 mt-3 text-center">เพิ่มอุปกรณ์กีฬา</h3>
                    }
                    else
                    {
                        <h3 class="mb-3 mt-3 text-center">แก้ไขอุปกรณ์กีฬา</h3>
                    }
                    <div class="mb-3 visually-hidden">
                        <label class="col-sm-3 col-form-label">Idp</label>
                        <div class="col-sm-8"> <input type="text" class="form-control" @bind="ServicesData.SPModelEquipX.PHEquipCode"></div>
                    </div>
                     <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">อุปกรณ์กีฬา</label>
                        <div class="col-sm-8"><input type="text" class="form-control" placeholder="โปรดกรอกอุปกรณ์กีฬา" @bind="ServicesData.SPModelEquipX.PHEquipName"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">ประเภทกีฬา</label>
                        <div class="col-sm-8"><select class="form-control" @bind="ServicesData.SPModelEquipX.PHSportCode" Placeholder="โปรดเลือกประเภทกีฬา">
                            @foreach(var sport in ServicesData.SPModelSportList)
                            {
                                <option value="@sport.PHSportCode">@sport.PHSportName</option>
                            }
                        </select></div>
                    </div>
                    <div class="form-group row mb-3" >
                        <label class="col-sm-3 col-form-label">จำนวน</label>
                        <div class="col-sm-8"><input type="number" class="form-control " placeholder="โปรดกรอกจำนวนอุปกรณ์" @bind="ServicesData.SPModelEquipX.PHEquipAmount"></div>
                    </div>
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">หน่วย</label>
                        <div class="col-sm-8"><input type="text" class="form-control" placeholder="โปรดกรอกหน่วยของอุปกรณ์" @bind="ServicesData.SPModelEquipX.PHEquipUnit"></div>
                    </div>
                    @*--------------------------------------------------------------------------------------*@
                    <div class="form-group row mb-3">
                        <label class="col-sm-3 col-form-label">รูปภาพ</label>
                        <div class="col-sm-8"><input class="form-control" type="file" placeholder="โปรดกรอกหน่วยของอุปกรณ์" @*@bind="ServicesData.SPModelEquipX.PHEquipImg"*@></div>
                    </div>
                    <div class="mb-3">
                          @if (ServicesData.ActionModel.Contains("add"))
                        {
                            <button type="submit" class= "btn btn-primary">บันทึก</button>
                        }
                        else
                        {
                        <button type="button" class= "btn btn-success " @onclick="UpdateEquip">แก้ไข</button>
                        <button class= "btn btn-danger " style="margin-left:50px;" type="button" @onclick="CancleFormEquip">ยกเลิก</button>
                        }
                    </div>
                </form>
            </div>
            <div class = "col-md-4 col-sm-4 col-xs-12"> </div>        
        </div>
        </div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ServicesData.GetDbSPModelSport();
        await ServicesData.GetDbSPModelEquip();
    }
    public async Task SubSport()
    {
        var result = await JS.InvokeAsync<bool>("SaveMemberjs");
        if (result)
        {
            await ServicesData.CreateDbSPModelEquip(ServicesData.SPModelEquipX);
            Navigation.NavigateTo("Sport");
            ServicesData.ClearformSport();
        }
    }
    public async Task UpdateEquip()
    {
        var result = await JS.InvokeAsync<bool>("UpdateMemberjs");
        if (result)
        {
            await ServicesData.UpdateDbSPModelEquip(ServicesData.SPModelEquipX);
            Navigation.NavigateTo("Sport");
            ServicesData.ClearformSport();
        }
    }
    public void CancleFormEquip()
    {
        Navigation.NavigateTo("Sport");
        ServicesData.ClearformSport();
    }

}
